---
- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'

- include_tasks: '{{ docker_engine_installer }}.yml'

- name: write /etc/docker/daemon.json
  become: yes
  become_user: root
  when: docker_engine_daemon_json is defined
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: 0644

- when: docker_engine_private_registry_cas is defined
  block:
    - name: mkdir -p /etc/docker/certs.d
      become: yes
      become_user: root
      file:
        path: /etc/docker/certs.d
        state: directory
        mode: 0755
        group: '{{ docker_engine_group | default("docker") }}'
    - name: create registry CA cert directories
      become: yes
      become_user: root
      with_items: '{{ docker_engine_private_registry_cas | default([]) }}'
      file:
        path: /etc/docker/certs.d/{{ item.registry }}
        state: directory
        mode: 0755
        group: '{{ docker_engine_group | default("docker") }}'
    - name: installing CA certs for private registries...
      become: yes
      become_user: root
      with_items: '{{ docker_engine_private_registry_cas | default([]) }}'
      copy:
        src: '{{ item.ca_cert }}'
        dest: /etc/docker/certs.d/{{ item.registry }}/ca.crt
        group: '{{ docker_engine_group | default("docker") }}'
        mode: 0640

- name: start/enable docker
  become: yes
  become_user: root
  when: docker_engine_manage_service
  service:
    name: docker
    state: '{{ docker_engine_state }}'
    enabled: '{{ docker_engine_enabled }}'
